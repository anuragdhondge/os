#include <stdio.h>
#define max 20
void sjf(){
int A[100][4];
int i, j, n, total = 0, index, temp;
float avg_wt, avg_tat;
printf("Enter number of process: ");
scanf("%d", &n);
printf("Enter Burst Time:\n");
for (i = 0; i < n; i++) {
printf("P%d: ", i + 1);
scanf("%d", &A[i][1]);
A[i][0] = i + 1;
}
for (i = 0; i < n; i++) {
index = i;
for (j = i + 1; j < n; j++)
if (A[j][1] < A[index][1])
index = j;
temp = A[i][1];
A[i][1] = A[index][1];
A[index][1] = temp;
temp = A[i][0];
A[i][0] = A[index][0];
A[index][0] = temp;
}
A[0][2] = 0;
for (i = 1; i < n; i++) {
A[i][2] = 0;
for (j = 0; j < i; j++)
A[i][2] += A[j][1];
total += A[i][2];
}
avg_wt = (float)total / n;
total = 0;
printf("P BT WT TAT\n");
for (i = 0; i < n; i++) {
A[i][3] = A[i][1] + A[i][2];
total += A[i][3];
printf("P%d %d %d %d\n", A[i][0],
A[i][1], A[i][2], A[i][3]);
}
avg_tat = (float)total / n;
printf("Average Waiting Time= %f", avg_wt);
printf("\nAverage Turnaround Time= %f", avg_tat);
}
void rr(){
 int i,burstTime[max],remainTime[max],remainProcess,arrivalTime[max],totalExecutionTime=0,timeQuantum,flag=0,n;
 float totalWaitingTime=0;
 printf("Enter the Number of Process(max 20) : ");
 scanf("%d",&n); 
 remainProcess=n;
 printf("Enter Arrival Time\n");
 for(i=0;i<n;i++){
 printf("For P[%d]: ",i+1);
 scanf("%d",&arrivalTime[i]);
 }
 printf("\nEnter Burst Time\n");
 for(i=0;i<n;i++){
 printf("For P[%d]: ",i+1);
 scanf("%d",&burstTime[i]);
 remainTime[i]=burstTime[i];
 }
 printf("\nEnter Time Quantum :");
 scanf("%d",&timeQuantum);
 printf("\n");
 for(i=0;remainProcess!=0;){
 if(remainTime[i]<=timeQuantum && remainTime[i]>0){
 totalExecutionTime+=remainTime[i];
 remainTime[i]=0;
 flag=1;
 }
 else if(remainTime[i]>0){
 remainTime[i]-=timeQuantum;
 totalExecutionTime+=timeQuantum;
 }
 if(flag==1 && remainTime[i]==0){
 printf("P[%d] | waiting Time : %d\n",i+1,totalExecutionTime-arrivalTime[i]-burstTime[i]);
 totalWaitingTime+=totalExecutionTime-arrivalTime[i]-burstTime[i];
 flag=0;
 remainProcess--;
 }
 if(i==n-1)
 i=0;
 else if(arrivalTime[i+1]<=totalExecutionTime){
 i++;
 }
 else
 i=0;
 }
 totalWaitingTime=(float)totalWaitingTime/n;
 printf("\nThe Average Waiting Time : %.2f \n",totalWaitingTime);
}
int main()
{
int n;
printf("*********Menu************\n");
printf("1. SJFS\n");
printf("2. Round Robin\n");
scanf("%d",&n);
if(n==1){
sjf();
}
if(n==2){
rr();
}
}
